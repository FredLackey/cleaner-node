import ascending = require("./ascending");
import addDays = require("./add-days");
import addMinutes = require("./add-minutes");
import addMonths = require("./add-months");
import addYears = require("./add-years");
import blockdate = require("./blockdate");
import cleanAlphanumeric = require("./clean-alphanumeric");
import cleanDigits = require("./clean-digits");
import cleanDto = require("./clean-dto");
import cleanObject = require("./clean-object");
import cleanString = require("./clean-string");
import copyContents = require("./copy-contents");
import copyFile = require("./copy-file");
import copyObject = require("./copy-object");
import comments = require("./comments");
import createPath = require("./create-path");
import deleteDirectory = require("./delete-directory");
import deleteFile = require("./delete-file");
import descending = require("./descending");
import decryptString = require("./decrypt-string");
import encryptString = require("./encrypt-string");
import env = require("./env");
import execution = require("./execution");
import express = require("./express");
import findAllUids = require("./find-all-uids");
import fromDto = require("./from-dto");
import fromEpoch = require("./from-epoch");
import fromIsoDate = require("./from-iso-date");
import fromResult = require("./from-result");
import fromShortDate = require("./from-short-date");
import jwt = require("./jwt");
import getArrayCount = require("./get-array-count");
import getBlockDate = require("./get-blockdate");
import getBracket = require("./get-bracket");
import getCommonPath = require("./get-common-path");
import getDayName = require("./get-day-name");
import getDuration = require("./get-duration");
import getEmail = require("./get-email");
import getEmails = require("./get-emails");
import getEnum = require("./get-enum");
import getEnums = require("./get-enums");
import getFileContents = require("./get-file-contents");
import getFileName = require("./get-file-name");
import getFileSize = require("./get-file-size");
import getFiles = require("./get-files");
import getFirst = require("./get-first");
import getFolderContents = require("./get-folder-contents");
import getHash = require("./get-hash");
import getId = require("./get-id");
import getIds = require("./get-ids");
import getInnerTokens = require("./get-inner-tokens");
import getLast = require("./get-last");
import getPadPrefix = require("./get-pad-prefix");
import getPadSuffix = require("./get-pad-suffix");
import getPads = require("./get-pads");
import getMin = require("./get-min");
import getMax = require("./get-max");
import getSingle = require("./get-single");
import getStringSize = require("./get-string-size");
import getSubstring = require("./get-substring");
import getTokenizedSegments = require("./get-tokenized-segments");
import getUid = require("./get-uid");
import getUids = require("./get-uids");
import getVars = require("./get-vars");
export const hasComments: (lineOrLines: string | string[]) => boolean;
import hasString = require("./has-string");
import hashFile = require("./hash-file");
import hashFileContents = require("./hash-file-contents");
import hashLines = require("./hash-lines");
import hashObject = require("./hash-object");
import hashString = require("./hash-string");
import hash = require("./hash");
import initArray = require("./init-array");
import isAlpha = require("./is-alpha");
import isAlphanumeric = require("./is-alphanumeric");
import isAsync = require("./is-async");
import isBoolean = require("./is-boolean");
import isBooleanIfSet = require("./is-boolean-ifset");
import isBracketted = require("./is-bracketted");
import isCamelCase = require("./is-camel-case");
import isCaps = require("./is-caps");
import isDate = require("./is-date");
import isDefined = require("./is-defined");
import isDeleted = require("./is-deleted");
import isDigits = require("./is-digits");
import isEmail = require("./is-email");
import isEmptyArray = require("./is-empty-array");
import isEqualDate = require("./is-equal-date");
import isFile = require("./is-file");
import isFolder = require("./is-folder");
import isFunction = require("./is-function");
import isGuidFormat = require("./is-guid-format");
import isIpAddress = require("./is-ip-address");
import isIsoDate = require("./is-iso-date");
import isJsonArray = require("./is-json-array");
import isJsonObject = require("./is-json-object");
import isJson = require("./is-json");
import isKebabCase = require("./is-kebab-case");
import isLowerCase = require("./is-lowercase");
import isMatch = require("./is-match");
import isNumber = require("./is-number");
import isObject = require("./is-object");
import isPascalCase = require("./is-pascal-case");
import isPhoneNumber = require("./is-phone-number");
import isSameDate = require("./is-same-date");
import isSet = require("./is-set");
import isSemver = require("./is-semver");
import isShortDate = require("./is-short-date");
import isSnakeCase = require("./is-snake-case");
import isUidFormat = require("./is-uid-format");
import isUrl = require("./is-url");
import isValidArray = require("./is-valid-array");
import isValidArrayIfSet = require("./is-valid-array-ifset");
import isValidChars = require("./is-valid-chars");
import isValidObject = require("./is-valid-object");
import isValidPath = require("./is-valid-path");
import isValidPathIfSet = require("./is-valid-path-ifset");
import isValidString = require("./is-valid-string");
import isValidStringIfSet = require("./is-valid-string-ifset");
import isZeroDate = require("./is-zero-date");
import loadJson = require("./load-json");
import makePath = require("./make-path");
import maxDate = require("./max-date");
import minDate = require("./min-date");
import moveFile = require("./move-file");
import newCode = require("./new-code");
import newGuid = require("./new-guid");
import newSalt = require("./new-salt");
import newUid = require("./new-uid");
import nextjs = require("./nextjs");
import now = require("./now");
import parseJson = require("./parse-json");
import parseJwt = require("./parse-jwt");
import print = require("./print");
import readFile = require("./read-file");
import readLines = require("./read-lines");
import removeAuditFields = require("./remove-audit-fields");
export const removeComments: (lineOrLines: string | string[]) => string | string[];
import removeDeleted = require("./remove-deleted");
import removePrefix = require("./remove-prefix");
import removeProperty = require("./remove-property");
import removeSuffix = require("./remove-suffix");
import replaceValues = require("./replace-values");
import saveJson = require("./save-json");
import sort = require("./sort");
import splitFirst = require("./split-first");
import stringify = require("./stringify");
import toBoolean = require("./to-boolean");
import toCamelCase = require("./to-camel-case");
import toColumn = require("./to-column");
import toEpoch = require("./to-epoch");
import toGuidFormat = require("./to-guid-format");
import toKebabCase = require("./to-kebab-case");
import toPascalCase = require("./to-pascal-case");
import toRequest = require("./to-request");
import toResult = require("./to-result");
import toResponse = require("./to-response");
import toSnakeCase = require("./to-snake-case");
import toTable = require("./to-table");
import toUidFormat = require("./to-uid-format");
import trimArray_1 = require("./trim-array");
import trimArray = trimArray_1.trim;
import trimString = require("./trim-string");
import trimToNull = require("./trim-to-null");
import trimToUndefined = require("./trim-to-undefined");
import undouble = require("./undouble");
import unique = require("./unique");
import uniqueNumbers = require("./unique-numbers");
import uniqueObjects = require("./unique-objects");
import uniqueStrings = require("./unique-strings");
import unquote = require("./unquote");
import walk = require("./walk");
import writeFile = require("./write-file");
import writeLines = require("./write-lines");
import body = require("./get-body");
export declare let doGet: (url: string, creds?: object, headers?: object) => Promise<any | null>;
export declare let doPost: (url: string, data: any, creds?: object, headers?: object) => Promise<any | null>;
export declare let doPut: (url: string, data: any, creds?: object, headers?: object) => Promise<any | null>;
export declare let doDelete: (url: string, data?: any, creds?: object, headers?: object) => Promise<any | null>;
export declare let ping: (creds?: object, headers?: object) => Promise<any | string>;
export declare let fromBlockDate: (value: string) => Date | null;
export declare let isBlockDate: (value: string, maxYear?: number) => boolean;
export declare let execute: (command: string) => Promise<{
    success: boolean;
    output?: {
        stdout: string;
    };
    error?: {
        error: Error;
    } | {
        stderr: string;
    };
}>;
export declare let executePromise: (command: string) => Promise<{
    stdout: string;
} | {
    error: Error;
} | {
    stderr: string;
}>;
export declare function getBody(req: object): any;
export { ascending, addDays, addMinutes, addMonths, addYears, blockdate, cleanAlphanumeric, cleanDigits, cleanDto, cleanObject, cleanString, copyContents, copyFile, copyObject, comments, createPath, deleteDirectory, deleteFile, descending, decryptString, encryptString, env, execution, express, findAllUids, fromDto, fromEpoch, fromIsoDate, fromResult, fromShortDate, jwt, getArrayCount, getBlockDate, getBracket, getCommonPath, getDayName, getDuration, getEmail, getEmails, getEnum, getEnums, getFileContents, getFileName, getFileSize, getFiles, getFirst, getFolderContents, getHash, getId, getIds, getInnerTokens, getLast, getPadPrefix, getPadSuffix, getPads, getMin, getMax, getSingle, getStringSize, getSubstring, getTokenizedSegments, getUid, getUids, getVars, hasString, hashFile, hashFileContents, hashLines, hashObject, hashString, hash, initArray, isAlpha, isAlphanumeric, isAsync, isBoolean, isBooleanIfSet, isBracketted, isCamelCase, isCaps, isDate, isDefined, isDeleted, isDigits, isEmail, isEmptyArray, isEqualDate, isFile, isFolder, isFunction, isGuidFormat, isIpAddress, isIsoDate, isJsonArray, isJsonObject, isJson, isKebabCase, isLowerCase, isMatch, isNumber, isObject, isPascalCase, isPhoneNumber, isSameDate, isSet, isSemver, isShortDate, isSnakeCase, isUidFormat, isUrl, isValidArray, isValidArrayIfSet, isValidChars, isValidObject, isValidPath, isValidPathIfSet, isValidString, isValidStringIfSet, isZeroDate, loadJson, makePath, maxDate, minDate, moveFile, newCode, newGuid, newSalt, newUid, nextjs, now, parseJson, parseJwt, print, readFile, readLines, removeAuditFields, removeDeleted, removePrefix, removeProperty, removeSuffix, replaceValues, saveJson, sort, splitFirst, stringify, toBoolean, toCamelCase, toColumn, toEpoch, toGuidFormat, toKebabCase, toPascalCase, toRequest, toResult, toResponse, toSnakeCase, toTable, toUidFormat, trimArray, trimString, trimToNull, trimToUndefined, undouble, unique, uniqueNumbers, uniqueObjects, uniqueStrings, unquote, walk, writeFile, writeLines, isAlphanumeric as isAlphaNumeric, cleanAlphanumeric as cleanAlphaNumeric, copyObject as copy, getFirst as first, getLast as last, getSingle as single, toRequest as toReq, unquote as unQuote, getArrayCount as count, isFolder as isDirectory, getMin as min, getMax as max, body };
