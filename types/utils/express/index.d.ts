import middleware = require("./middleware");
export function asyncMiddleware(fn: any): (req: any, res: any, next: any) => Promise<void>;
export function getBody(req: any): any;
export function getKeys(obj: any, keyOrKeys: any, isCaseSensitive?: boolean): string[];
export function getValuesFromObject(obj: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValues(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValuesFromBody(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValuesFromParams(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValuesFromQuery(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValuesFromHeaders(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function getValuesFromCookies(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any[];
export function firstValue(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function firstValueFromBody(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function firstValueFromParams(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function firstValueFromQuery(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function firstValueFromHeaders(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function firstValueFromCookies(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValue(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValueFromBody(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValueFromParams(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValueFromQuery(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValueFromHeaders(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
export function singleValueFromCookies(req: any, keyOrKeys: any, isCaseSensitive?: boolean): any;
import getHeader = require("./get-header");
import getHeaders = require("./get-headers");
export function getJwt({ req, key, keys, header, headers, cookie, cookies }: {
    req: any;
    key?: string;
    keys?: any[];
    header?: string;
    headers?: any[];
    cookie?: string;
    cookies?: any[];
}): any;
export function getUrl(req: any): string;
import getUrlParam = require("./get-url-param");
import getUrlParams = require("./get-url-params");
export function getClientIp(req: any): any;
import respond = require("./respond");
export { middleware, asyncMiddleware as amw, asyncMiddleware as wrap, firstValue as getValue, firstValueFromBody as getValueFromBody, firstValueFromParams as getValueFromParams, firstValueFromQuery as getValueFromQuery, firstValueFromHeaders as getValueFromHeaders, firstValueFromCookies as getValueFromCookies, getHeader, getHeaders, getUrlParam, getUrlParams, getUrl as fullUrl, respond };
